{"version":3,"sources":["scripts/main.js"],"names":["boardGame","document","querySelector","btnStart","startMessage","winMessage","loseMessage","scoreBoard","controls","score","win","width","matrix","grid","btnRestart","createElement","createRestartButton","classList","add","textContent","getStart","remove","append","getRandomNumber","createBoard","addEventListener","control","getReset","innerText","i","j","cell","rows","cells","firstIndex","Math","floor","random","secondIndex","checkLose","sliding","row","filterRows","filter","num","emptyCell","length","zeroesArr","Array","fill","copyGrid","arrGrid","extraGrid","compare","a","b","getMove","direction","flip","rotate","flipGrid","rotateGrid","past","getSumOfNumber","changed","map","arr","reverse","gridArr","newGrid","checkOnWin","e","key","el","removeEventListener","count"],"mappings":"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","file":"main.24c55ff8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n// write your code here\n\nconst boardGame = document.querySelector('.game-field');\nconst btnStart = document.querySelector('.start');\nconst startMessage = document.querySelector('.message_start');\nconst winMessage = document.querySelector('.message_win');\nconst loseMessage = document.querySelector('.message_lose');\nconst scoreBoard = document.querySelector('.game-score');\nconst controls = document.querySelector('.controls');\nlet score = 0;\nconst win = 2048;\nconst width = 4;\n\nfunction matrix() {\n  return [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n}\n\nlet grid = matrix();\n\n// create button restart\n\nconst btnRestart = document.createElement('button');\n\nfunction createRestartButton() {\n  btnRestart.classList.add('restart', 'button');\n  btnRestart.textContent = 'Restart';\n\n  return btnRestart;\n}\n\nbtnStart.addEventListener('click', getStart);\n\nfunction getStart() {\n  btnStart.remove();\n  controls.append(createRestartButton());\n  startMessage.classList.add('message_hidden');\n  getRandomNumber();\n  getRandomNumber();\n  createBoard();\n\n  document.addEventListener('keyup', control);\n}\nbtnRestart.addEventListener('click', getReset);\n\nfunction getReset() {\n  grid = matrix();\n  getStart();\n  scoreBoard.innerText = 0;\n  score = 0;\n  winMessage.classList.add('message_hidden');\n  loseMessage.classList.add('message_hidden');\n};\n\n// create board game\nfunction createBoard() {\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      const cell = boardGame.rows[i].cells[j];\n\n      cell.classList = ('field-cell');\n      cell.textContent = `${grid[i][j]}`;\n\n      if (grid[i][j] > 0) {\n        cell.classList.add(`field-cell--${grid[i][j]}`);\n        cell.textContent = `${grid[i][j]}`;\n      } else {\n        cell.textContent = '';\n      }\n    }\n  };\n}\n\n// generate random number\nfunction getRandomNumber() {\n  const firstIndex = Math.floor(Math.random() * width);\n  const secondIndex = Math.floor(Math.random() * width);\n\n  if (grid[firstIndex][secondIndex] === 0) {\n    grid[firstIndex][secondIndex] = Math.random() <= 0.9 ? 2 : 4;\n    checkLose();\n  } else {\n    getRandomNumber();\n  }\n}\n\n// move\nfunction sliding(row) {\n  let filterRows = row.filter(num => num > 0);\n  const emptyCell = width - filterRows.length;\n  const zeroesArr = Array(emptyCell).fill(0);\n\n  filterRows = [...zeroesArr, ...filterRows];\n\n  return filterRows;\n}\n\nfunction copyGrid(arrGrid) {\n  const extraGrid = matrix();\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      extraGrid[i][j] = arrGrid[i][j];\n    }\n  }\n\n  return extraGrid;\n}\n\nfunction compare(a, b) {\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      if (a[i][j] !== b[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getMove(direction) {\n  let flip = false;\n  let rotate = false;\n\n  switch (direction) {\n    case 'ArrowRight':\n      break;\n    case 'ArrowLeft':\n      grid = flipGrid(grid);\n      flip = true;\n      break;\n    case 'ArrowDown':\n      grid = rotateGrid(grid, 1);\n      rotate = true;\n      break;\n    case 'ArrowUp':\n      grid = rotateGrid(grid, 1);\n      grid = flipGrid(grid);\n      flip = true;\n      rotate = true;\n      break;\n    default:\n      break;\n  }\n\n  const past = copyGrid(grid);\n\n  for (let i = 0; i < width; i++) {\n    grid[i] = sliding(grid[i]);\n    getSumOfNumber(grid[i]);\n    grid[i] = sliding(grid[i]);\n  }\n\n  const changed = compare(past, grid);\n\n  if (flip) {\n    grid = flipGrid(grid);\n  }\n\n  if (rotate) {\n    grid = rotateGrid(grid, -1);\n  }\n\n  if (changed) {\n    getRandomNumber();\n  }\n}\n\nfunction flipGrid() {\n  grid.map(arr => arr.reverse());\n\n  return grid;\n}\n\nfunction rotateGrid(gridArr, direction) {\n  const newGrid = matrix();\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      if (direction === 1) {\n        newGrid[i][j] = gridArr[j][i];\n      } else {\n        newGrid[j][i] = gridArr[i][j];\n      }\n    }\n  }\n\n  return newGrid;\n}\n\n// // the sum of two the same numbers\nfunction getSumOfNumber(row) {\n  for (let i = width - 1; i >= 1; i--) {\n    if (row[i] === row[i - 1]) {\n      row[i] = row[i] + row[i - 1];\n      row[i - 1] = 0;\n    }\n    score += row[i];\n  }\n\n  scoreBoard.innerText = score;\n\n  checkOnWin();\n\n  return row;\n}\n\nfunction control(e) {\n  switch (e.key) {\n    case 'ArrowLeft':\n      getMove('ArrowLeft');\n      createBoard();\n      break;\n    case 'ArrowUp':\n      getMove('ArrowUp');\n      createBoard();\n      break;\n    case 'ArrowRight':\n      getMove('ArrowRight');\n      createBoard();\n      break;\n    case 'ArrowDown':\n      getMove('ArrowDown');\n      createBoard();\n      break;\n  }\n}\n\nfunction checkOnWin() {\n  grid.map((el, i) => {\n    if (el[i] === win) {\n      winMessage.classList.remove('message_hidden');\n      btnStart.classList.remove('restart');\n      btnStart.classList.add('start');\n      document.removeEventListener('keyup', control);\n    }\n  });\n}\n\nfunction checkLose() {\n  let count = 0;\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      if (grid[i][j] === 0) {\n        count++;\n      }\n    }\n  }\n\n  if (count === 0) {\n    loseMessage.classList.remove('message_hidden');\n    winMessage.classList.add('message_hidden');\n    document.removeEventListener('keyup', control);\n  }\n};\n"]}